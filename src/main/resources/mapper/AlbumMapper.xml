<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shelly.mapper.AlbumMapper">

    <resultMap id="BaseResultMap" type="com.shelly.entity.pojo.Album">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="albumName" column="album_name" jdbcType="VARCHAR"/>
            <result property="albumCover" column="album_cover" jdbcType="VARCHAR"/>
            <result property="albumDesc" column="album_desc" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,album_name,album_cover,
        album_desc,status,create_time,
        update_time
    </sql>
    <select id="selectBackAlbumList" resultType="com.shelly.entity.vo.res.AlbumBackResp">
        SELECT a.id,
        a.album_name,
        a.album_cover,
        a.album_desc,
        COUNT(p.id) AS photo_count,
        a.`status`
        FROM t_album a
        LEFT JOIN t_photo p ON a.id = p.album_id
        <where>
            <if test="param.keyword != null and param.keyword != ''">
                and album_name like concat('%',#{param.keyword},'%')
            </if>
        </where>
        GROUP BY a.id
        ORDER BY a.id DESC
        LIMIT #{param.current}, #{param.size}
    </select>
    <select id="selectAlbumVOList" resultType="com.shelly.entity.vo.res.AlbumResp">
        select id, album_name, album_desc, album_cover
        from t_album
    </select>
</mapper>
